/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package micro;

import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {
    @Test public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }

    @Test
    public void HappyCasePal() throws IllegalArgumentException {
        String input = "ada";

        assertTrue("This is a palindeone",
                Library.pal(input));
    }

    @Test
    public void FailingCase() throws IllegalArgumentException {
        String input = "adA";

        assertFalse("This is not a palindrone",
                Library.pal(input));
    }

    @Test
    public void EvenLength() throws IllegalArgumentException{
        String input = "adda";

        assertTrue("This is a palindrone, but even length",
                Library.pal(input));
    }

    @Test
    public void Numbers() throws IllegalArgumentException{
        String input = "1dd1";

        assertTrue("This is a palindrone, but with numbers",
                Library.pal(input));
    }

    @Test(expected = IllegalArgumentException.class)
    public void emptyString() throws IllegalArgumentException {

        assertTrue("Empty String",
                Library.pal(""));
        assertTrue("Empty String",
                Library.pal(null));
    }

    //expected fail
//    @Test(expected = NullPointerException.class)
//    public void whenExceptionThrown_thenExpectationSatisfied() {
//        String test = null;
//        test.length();
//    }
}
